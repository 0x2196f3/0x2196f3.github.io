<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on 0x2196f3's blog</title><link>/tags/linux/</link><description>0x2196f3's blog (Linux)</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 08 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>docker部署llama-swap</title><link>/posts/llama-swap-on-linux/</link><pubDate>Fri, 08 Aug 2025 00:00:00 +0000</pubDate><guid>/posts/llama-swap-on-linux/</guid><description>&lt;p>gpt-oss刚发布，ollama的支持有问题，性能和llama-cpp相比有几倍的差距，但是llama-cpp一个进程只能加载一个gguf模型，api也比较简陋，无法长期使用&lt;/p>
&lt;p>&lt;del>不过ollama性能问题估计过几天就修复了&lt;/del>&lt;/p>
&lt;h2 id="ollama-llama-cpp-性能对比" >
&lt;div>
&lt;a href="#ollama-llama-cpp-%e6%80%a7%e8%83%bd%e5%af%b9%e6%af%94">
#
&lt;/a>
Ollama Llama-cpp 性能对比
&lt;/div>
&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>gpt-oss:20b&lt;/th>
&lt;th>tokens/s&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>llama-cpp (vulkan)&lt;/td>
&lt;td>96.52&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>llama-cpp (rocm on Windows)&lt;/td>
&lt;td>94.11&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ollama (rocm)&lt;/td>
&lt;td>35.72&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="llama-swap" >
&lt;div>
&lt;a href="#llama-swap">
#
&lt;/a>
&lt;a href="https://github.com/mostlygeek/llama-swap">llama-swap&lt;/a>
&lt;/div>
&lt;/h2>
&lt;p>llama-server和llama-swap打包进同一个docker，通过启动多个llama-server进程切换gguf模型，提供一个简单的webui，可以手动加载/卸载模型，也可以在网页上对话&lt;/p>
&lt;p>由于llama-cpp没有提供Linuxd的ROCM二进制文件，只能使用Vulkan，单卡性能和ROCM基本没有区别&lt;/p>
&lt;p>Vulkan可以在多张不同品牌的GPU上运行同一个模型，实测一张AMD独显+一张Intel独显能运行，性能可以接受 (16GB+16GB，qwq:32b Q4_K_M 15 token/s)&lt;/p>
&lt;h2 id="installation" >
&lt;div>
&lt;a href="#installation">
#
&lt;/a>
Installation
&lt;/div>
&lt;/h2>
&lt;blockquote>
&lt;p>AMD显卡安装驱动+ROCM (Ubuntu24)&lt;/p>&lt;/blockquote>
&lt;p>&lt;a href="https://rocm.docs.amd.com/projects/install-on-linux/en/latest/install/quick-start.html">文档&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd /tmp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># insttll driver&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget https://repo.radeon.com/amdgpu-install/6.4.2/ubuntu/noble/amdgpu-install_6.4.60402-1_all.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt install ./amdgpu-install_6.4.60402-1_all.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt install &lt;span style="color:#e6db74">&amp;#34;linux-headers-&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>uname -r&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;linux-modules-extra-&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>uname -r&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt install amdgpu-dkms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#reboot&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo reboot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># install rocm&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget https://repo.radeon.com/amdgpu-install/6.4.2/ubuntu/noble/amdgpu-install_6.4.60402-1_all.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt install ./amdgpu-install_6.4.60402-1_all.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt install python3-setuptools python3-wheel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo usermod -a -G render,video $LOGNAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt install rocm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#reboot&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo reboot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>AMD显卡部署llama-swap:vulkan&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 所有gguf模型和config.yaml 都放在容器 /data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo docker run -it -d --device /dev/kfd --device /dev/dri -p 8080:8080 -v /path/to/gguf/location:/data --name llama-swap ghcr.io/mostlygeek/llama-swap:vulkan --config /data/config.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>最简config.yaml配置&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">models&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;gpt-oss-20b&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">cmd&lt;/span>: &lt;span style="color:#ae81ff">/app/llama-server --port ${PORT} -m /data/gpt-oss-20b.gguf -ngl 999&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;qwen3-30b&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">cmd&lt;/span>: &lt;span style="color:#ae81ff">/app/llama-server --port ${PORT} -m /data/qwen3-30b-q4_K_M.gguf -ngl 999&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>调整&lt;code>-ngl 999&lt;/code>将显存装不下的层卸载到CPU，提高性能&lt;/li>
&lt;li>&lt;a href="https://github.com/mostlygeek/llama-swap/wiki/Configuration">文档&lt;/a>&lt;/li>
&lt;li>文档没写的看&lt;a href="https://github.com/mostlygeek/llama-swap/blob/main/docker/llama-swap.Containerfile">Dockerfile&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Fedora+Windows双系统启动配置</title><link>/posts/fedora-dual-boot-configuration/</link><pubDate>Sat, 05 Jul 2025 00:00:00 +0000</pubDate><guid>/posts/fedora-dual-boot-configuration/</guid><description>&lt;h2 id="1-fedora-自动删除旧内核" >
&lt;div>
&lt;a href="#1-fedora-%e8%87%aa%e5%8a%a8%e5%88%a0%e9%99%a4%e6%97%a7%e5%86%85%e6%a0%b8">
#
&lt;/a>
1. Fedora 自动删除旧内核
&lt;/div>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo nano /etc/dnf/dnf.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>保留最新的2个内核&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">[main]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">installonly_limit&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2-grub2-设置默认启动分区" >
&lt;div>
&lt;a href="#2-grub2-%e8%ae%be%e7%bd%ae%e9%bb%98%e8%ae%a4%e5%90%af%e5%8a%a8%e5%88%86%e5%8c%ba">
#
&lt;/a>
2. GRUB2 设置默认启动分区
&lt;/div>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo nano /etc/default/grub
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>三种模式&lt;/p>&lt;/blockquote>
&lt;ul>
&lt;li>记忆上次选择的启动项&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>GRUB_DEFAULT&lt;span style="color:#f92672">=&lt;/span>saved
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GRUB_SAVEDEFAULT&lt;span style="color:#f92672">=&lt;/span>true
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>选择第3个启动项&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>GRUB_DEFAULT&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>选择该名称的启动项&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>GRUB_DEFAULT&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Windows Boot Manager (on /dev/sda1)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>保存&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo grub2-mkconfig -o /boot/grub2/grub.cfg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Gnome 桌面环境美化（持续更新）</title><link>/posts/gnome-beautify/</link><pubDate>Sat, 05 Jul 2025 00:00:00 +0000</pubDate><guid>/posts/gnome-beautify/</guid><description>&lt;h1 id="个人使用的gnome桌面插件" >
&lt;div>
&lt;a href="#%e4%b8%aa%e4%ba%ba%e4%bd%bf%e7%94%a8%e7%9a%84gnome%e6%a1%8c%e9%9d%a2%e6%8f%92%e4%bb%b6">
##
&lt;/a>
个人使用的Gnome桌面插件
&lt;/div>
&lt;/h1>
&lt;h2 id="dash-to-dock" >
&lt;div>
&lt;a href="#dash-to-dock">
#
&lt;/a>
&lt;a href="https://extensions.gnome.org/extension/307/dash-to-dock/">Dash to Dock&lt;/a>
&lt;/div>
&lt;/h2>
&lt;p>&lt;img src="https://blog.0x2196f3.top/images/Dash_to_Dock.jpg" alt="Dash to Dock">&lt;br>
类似MacOS的dock栏，维护中&lt;/p>
&lt;h2 id="gtk4-desktop-icons-ng-ding" >
&lt;div>
&lt;a href="#gtk4-desktop-icons-ng-ding">
#
&lt;/a>
&lt;a href="https://extensions.gnome.org/extension/5263/gtk4-desktop-icons-ng-ding/">Gtk4 Desktop Icons NG (DING)&lt;/a>
&lt;/div>
&lt;/h2>
&lt;p>&lt;img src="https://blog.0x2196f3.top/images/Ding_Desktop_Icon.png" alt="Gtk4 Desktop Icons NG (DING)">&lt;br>
添加桌面图标，维护中&lt;/p>
&lt;h2 id="system-monitor" >
&lt;div>
&lt;a href="#system-monitor">
#
&lt;/a>
&lt;a href="https://extensions.gnome.org/extension/6807/system-monitor/">System Monitor&lt;/a>
&lt;/div>
&lt;/h2>
&lt;p>&lt;img src="https://blog.0x2196f3.top/images/System_Monitor.png" alt="System Monitor">&lt;br>
在顶栏添加系统状态监控，用来显示实时网速，维护中&lt;/p></description></item><item><title>搬瓦工VPS配置自定义IPv6地址</title><link>/posts/bandwagonhost-ipv6-configuration/</link><pubDate>Thu, 03 Jul 2025 00:00:00 +0000</pubDate><guid>/posts/bandwagonhost-ipv6-configuration/</guid><description>&lt;p>搬瓦工提供的ipv6是通过6in4隧道连接到另一台服务器的ipv6出口的,公网ipv6地址在&lt;code>ipv6net&lt;/code>上,不是&lt;code>eth0&lt;/code>&lt;/p>
&lt;ul>
&lt;li>ipv6直连中国速度比ipv4慢不少&lt;/li>
&lt;li>删了ipv6重新分配还是原来的那个&lt;/li>
&lt;li>可以先用ipv6测试协议会不会被墙，没事再换成ipv4&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>搬瓦工后台通过&lt;code>ipv6net&lt;/code>这个service自动配置6in4隧道,配置脚本在&lt;code>/etc/init_ipv6_tunnel&lt;/code>,但修改这个脚本重启会复原&lt;br>
需要禁用&lt;code>ipv6net&lt;/code>这个服务,再手动配置&lt;code>/etc/network/interfaces&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>禁用ipv6net服务&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>systemctl stop ipv6net
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl disable ipv6net
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>reboot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>手动配置ipv6地址(Ubuntu/Debian)&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>nano /etc/network/interfaces
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 所有ipv6地址都不带中括号&amp;#39;[&amp;#39;和&amp;#39;]&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>auto ipv6net
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>iface ipv6net inet6 v4tunnel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> address &lt;span style="color:#f92672">[&lt;/span>your custom ipv6&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> netmask &lt;span style="color:#ae81ff">64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endpoint *.*.*.*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> local *.*.*.*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ttl &lt;span style="color:#ae81ff">255&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> gateway &lt;span style="color:#f92672">[&lt;/span>ipv6 gateway&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> up /sbin/ip -6 addr add &lt;span style="color:#f92672">[&lt;/span>another custom ipv6&lt;span style="color:#f92672">]&lt;/span>/64 dev $IFACE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> up /sbin/ip -6 addr add &lt;span style="color:#f92672">[&lt;/span>yet another custom ipv6&lt;span style="color:#f92672">]&lt;/span>/64 dev $IFACE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> down /sbin/ip -6 addr del &lt;span style="color:#f92672">[&lt;/span>another custom ipv6&lt;span style="color:#f92672">]&lt;/span>/64 dev $IFACE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> down /sbin/ip -6 addr del &lt;span style="color:#f92672">[&lt;/span>yet another custom ipv6&lt;span style="color:#f92672">]&lt;/span>/64 dev $IFACE
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>ip地址根据搬瓦工后台的配置照抄,up和down的ipv6地址一一对应,复制多行可以添加多个自定义ipv6地址&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>/64&lt;/code>代表自定义ipv6的后一半地址可以随便写,举例:&lt;/p>&lt;/blockquote>
&lt;pre tabindex="0">&lt;code># 这是网关
1111:2222:3333:4444::1/64
# 这是可用的ipv6地址
1111:2222:3333:4444:abcd:1234:abcd:1234
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>重启网络&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>systemctl restart networking
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>